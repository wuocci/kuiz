[{"/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/index.js":"1","/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/Nametags.js":"2","/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/Radios.js":"3","/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/GameTime.js":"4","/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/PlayerList.js":"5","/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/MainmenuPlayers.js":"6","/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/Info.js":"7","/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/OverTime.js":"8","/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/VictoryScreen.js":"9"},{"size":286,"mtime":1609688962995,"results":"10","hashOfConfig":"11"},{"size":2556,"mtime":1609329813261,"results":"12","hashOfConfig":"11"},{"size":1027,"mtime":1608386362926,"results":"13","hashOfConfig":"14"},{"size":11602,"mtime":1609843359808,"results":"15","hashOfConfig":"11"},{"size":714,"mtime":1609168967309,"results":"16","hashOfConfig":"11"},{"size":2028,"mtime":1609265233766,"results":"17","hashOfConfig":"11"},{"size":1185,"mtime":1609683145682,"results":"18","hashOfConfig":"11"},{"size":7774,"mtime":1609788294480,"results":"19","hashOfConfig":"11"},{"size":1211,"mtime":1609772743023,"results":"20","hashOfConfig":"11"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"5fyyuu",{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1g1ojgb",{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"23"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"23"},"/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/index.js",[],["42","43"],"/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/Nametags.js",[],"/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/Radios.js",[],["44","45"],"/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/GameTime.js",["46","47","48","49","50","51","52"],"/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/PlayerList.js",[],"/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/MainmenuPlayers.js",[],"/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/Info.js",[],"/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/OverTime.js",["53","54","55","56","57","58","59","60","61","62","63"],"import React, { useState, useEffect } from \"react\";\nimport PlayerNav from \"./PlayerList\";\nimport loader from \"./visuals/puff.svg\";\nimport '../App.css';\nimport VictoryScreen from \"./VictoryScreen\";\n\nfunction Overtime({playerList, winnerList, questionOnScreen, findChars, replaceChars}){\n    //STATET\n    const [round, setRound] = useState(1);\n    const [playerCounter, setPlayer] = useState(0);\n    const [count, setCount] = useState(1); \n    const [loading, setLoading] = useState(true);\n    const [newQuestCounter, setCounter] = useState(0);\n    const [questionList, setList] = useState([]);\n    const [questionChecker, setCheck] = useState([]);\n    const [visible, setVisible] = useState(true);\n    const [points, setPoints] = useState(Math.max.apply(Math, winnerList.map(o => o.points)));\n    var winnerList2 = [];\n\n\n\n    useEffect(() => {\n        setTimeout(() => setLoading(false), 8000)\n      }, []);\n\n    const playerCounterMethod = () => {\n        setCounter(newQuestCounter + 1);\n        if(count === winnerList.length){\n            setPlayer(0);\n            setCount(1);\n            roundCounter();\n        }\n        else{\n            setPlayer(playerCounter + 1);\n            setCount(count + 1);\n        }\n    }\n\n    const pickQuestions = () => {\n        var listLen = questionOnScreen.length -round;\n        var stopFlag = false;\n        for(var i = listLen; i > 0; i--){\n            if(stopFlag){\n                break;\n             }\n            else{\n                var pickedCategory = questionOnScreen[i].category;\n                console.log(pickedCategory);\n                var categoryList = questionOnScreen.filter(category => category.category == pickedCategory);\n                console.log(categoryList);\n                if(categoryList.length >= winnerList.length){\n                    for(var j = categoryList.length -1; j > 0; j--){\n                        var question = categoryList[j];\n                        if(!questionChecker.includes(question)){\n                            if(winnerList.length > questionList.length){\n                                questionList.push(question);\n                                questionChecker.push(question);\n                            }\n                            else{\n                                stopFlag = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n\n    const addPoints = () => {\n        for(let i in playerList) {\n            if(playerList[i].name == winnerList[playerCounter].name){\n                //playerList[i].points = playerList[i].points + 1;\n                winnerList[i].points = winnerList[i].points + 1;\n            }\n        }\n    }\n\n\n    const roundCounter = () => {\n        setList([]);\n        console.log(checkScore());\n        if(checkScore() == false){\n            setRound(round + 1);\n        }\n        else{\n            setVisible(false);\n        }\n    }\n\n    const replaceStr = (str, find, replaceChars) => {\n        for (var i = 0; i < find.length; i++) {\n            str = str.replace(new RegExp(findChars[i], 'gi'), replaceChars[i]);\n        }\n        return str;    \n    }\n\n\n    const checkScore = () => {\n        var maxPoints = Math.max.apply(Math, winnerList.map(o => o.points));\n        if(isNaN(maxPoints)){\n           alert(\"Error in points count, sorry!\")\n        }\n        else if(maxPoints == points){\n            return false;\n        }\n        else{\n           winnerList2 = winnerList.filter(player => player.points == maxPoints);\n           console.log(winnerList2);\n           if(winnerList2.length > 1){\n                for(let j in winnerList){\n                    if(winnerList[j].points != maxPoints){\n                        console.log(winnerList);\n                        winnerList.splice(j, 1) \n                        console.log(winnerList);\n                    }\n                }\n                if(winnerList.length == 1){\n                    return true;\n                }\n                else{\n                    return false;\n                }\n            }\n            else{\n                return true;\n            }\n        }\n    }\n\n\n    const answeredQuestion = (event) => {\n        const theAnswer = event.target.value; //klikattu painike.\n\n        var buttons = document.getElementsByClassName(\"answer\"); //lista vastauspainikkeista.\n\n        if(theAnswer === replaceStr(questionList[playerCounter].correct_answer, findChars, replaceChars)){\n            setTimeout(() => {\n                event.target.style.backgroundColor = \"#16167ae4\";\n                addPoints();\n                playerCounterMethod();\n            }, 2000);\n            event.target.style.backgroundColor = \"#0cbe0c\";\n            \n        }     \n        else{\n            for(var i = 0; i < buttons.length; i++){\n                if(buttons[i].value == replaceStr(questionList[playerCounter].correct_answer, findChars, replaceChars)){\n                    var buttonColour = buttons[i];\n                    event.target.style.backgroundColor = \"#e40c2b\";\n                    buttonColour.style.backgroundColor = \"#0cbe0c\";    \n                }\n                else{\n                    event.target.style.backgroundColor = \"#e40c2b\";\n                }\n            }\n            setTimeout(() => {\n                event.target.style.backgroundColor = \"#16167ae4\";\n                if(buttonColour !== undefined){\n                    buttonColour.style.backgroundColor = \"#16167ae4\";\n                }\n                else{\n                    console.log(\"TÃ¤s oli undefined\");\n                }\n                playerCounterMethod();\n            }, 2000); \n        }\n    }\n    pickQuestions(); \n    console.log(winnerList);\n    console.log(questionList);\n    console.log(questionChecker);\n    const answeList = [];\n    var correctAnswer = questionList[playerCounter].correct_answer;\n    var theQuestion = questionList[playerCounter].question;\n    theQuestion = replaceStr(theQuestion, findChars, replaceChars);\n    questionList[playerCounter].incorrect_answers.map((answer) => answeList.push(answer));\n    answeList.push(correctAnswer);\n    for(var i = 0; i < answeList.length; i++){\n        answeList[i] = replaceStr(answeList[i], findChars, replaceChars);\n    } \n    answeList.sort(() => .5 - Math.random() );\n    if(visible){\n        return(\n            <>\n            {loading === false ? (\n            <div className=\"gameDiv\">\n            <div className='playerNav'>\n                    <PlayerNav playerList={playerList}/>\n                </div>\n                <div className=\"questionsBox\">\n                    <h2>ROUND {round} </h2>\n                    <h3><span> {winnerList[playerCounter].name + \"'s\"} </span> turn</h3>\n                <p>Category: {questionList[playerCounter].category}</p>\n                <p>{theQuestion}</p>\n                <div className =\"answerButtons\">\n                    {answeList.map((answer, index) => \n                    <button className=\"answer\" value={answer} key={index} onClick={answeredQuestion}>{answer}</button>)}\n                </div>\n            </div>  \n            </div>\n        ) : (<div className=\"loader\"> \n                    <img className=\"loadingImg\" src={loader} alt=\"loader\"></img>\n                        <h2>Preparing for the SUDDEN DEATH rounds. GET READY!</h2>\n                        <h3> PLAYERS IN SUDDEN DEATH ROUNDS: {winnerList.map((player) => <p>{player.name}</p>)} </h3>\n                    </div> \n            )}</>\n        );\n    }\n    else{\n        return(\n            <VictoryScreen\n                playerList = {playerList}\n                winnerList = {winnerList}\n            ></VictoryScreen>\n        );\n    }\n    \n}\n\n\nexport default Overtime","/Users/wuokki/Desktop/code/VisailuPeli/visailupelieng2/src/components/VictoryScreen.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":74,"column":7,"nodeType":"72","endLine":74,"endColumn":28,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":120,"column":37,"nodeType":"76","messageId":"77","endLine":120,"endColumn":39},{"ruleId":"74","severity":1,"message":"75","line":150,"column":35,"nodeType":"76","messageId":"77","endLine":150,"endColumn":37},{"ruleId":"74","severity":1,"message":"75","line":207,"column":22,"nodeType":"76","messageId":"77","endLine":207,"endColumn":24},{"ruleId":"74","severity":1,"message":"75","line":208,"column":34,"nodeType":"76","messageId":"77","endLine":208,"endColumn":36},{"ruleId":"74","severity":1,"message":"75","line":214,"column":41,"nodeType":"76","messageId":"77","endLine":214,"endColumn":43},{"ruleId":"74","severity":1,"message":"75","line":292,"column":34,"nodeType":"76","messageId":"77","endLine":292,"endColumn":36},{"ruleId":"78","severity":1,"message":"79","line":15,"column":29,"nodeType":"80","messageId":"81","endLine":15,"endColumn":37},{"ruleId":"78","severity":1,"message":"82","line":17,"column":20,"nodeType":"80","messageId":"81","endLine":17,"endColumn":29},{"ruleId":"83","severity":1,"message":"84","line":49,"column":60,"nodeType":"85","messageId":"86","endLine":49,"endColumn":107},{"ruleId":"74","severity":1,"message":"75","line":49,"column":90,"nodeType":"76","messageId":"77","endLine":49,"endColumn":92},{"ruleId":"74","severity":1,"message":"75","line":72,"column":35,"nodeType":"76","messageId":"77","endLine":72,"endColumn":37},{"ruleId":"74","severity":1,"message":"75","line":83,"column":25,"nodeType":"76","messageId":"77","endLine":83,"endColumn":27},{"ruleId":"74","severity":1,"message":"75","line":104,"column":27,"nodeType":"76","messageId":"77","endLine":104,"endColumn":29},{"ruleId":"74","severity":1,"message":"75","line":108,"column":68,"nodeType":"76","messageId":"77","endLine":108,"endColumn":70},{"ruleId":"74","severity":1,"message":"87","line":112,"column":45,"nodeType":"76","messageId":"77","endLine":112,"endColumn":47},{"ruleId":"74","severity":1,"message":"75","line":118,"column":38,"nodeType":"76","messageId":"77","endLine":118,"endColumn":40},{"ruleId":"74","severity":1,"message":"75","line":148,"column":37,"nodeType":"76","messageId":"77","endLine":148,"endColumn":39},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],["88"],["89"],"react-hooks/exhaustive-deps","React Hook useLayoutEffect has a missing dependency: 'questionOnScreen'. Either include it or remove the dependency array.","ArrayExpression",["90"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'setCheck' is assigned a value but never used.","Identifier","unusedVar","'setPoints' is assigned a value but never used.","no-loop-func","Function declared in a loop contains unsafe references to variable(s) 'pickedCategory'.","ArrowFunctionExpression","unsafeRefs","Expected '!==' and instead saw '!='.","no-global-assign","no-unsafe-negation",{"desc":"91","fix":"92"},"Update the dependencies array to be: [questionOnScreen, round, sessionToken]",{"range":"93","text":"94"},[2994,3015],"[questionOnScreen, round, sessionToken]"]